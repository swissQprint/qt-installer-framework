The Qt Installer Framework provides a set of tools and utilities to create
installers for the supported desktop Qt platforms: Linux, Microsoft Windows, and
macOS.

# swissQprint

We forked the project to make some small adjustments and make it conanized.

## build

We need a qmake from a statically built Qt!

*  Open Visual Studio x64 native command prompt
*  Extend the path variable to find the correct Qt qmake and jom (if needed)
   example: set PATH="C:\Qt\static\5.10.1\bin;C:\Qt\Tools\QtCreator\bin;%PATH%"
*  run 'qmake.exe installerfw.pro CONFIG+=release -spec win32-msvc'
*  run 'jom.exe /J 10' 
*  See the result in build/ as installerbase.exe is created

Hint: I needed to define the user PATH variable manually. Could not find conan anymore.
Be careful not to forget to remove all Makefiles. Otherwise they will be copied to the
conan directory and mess up the build. They need to be generated again with the right
paths to canan package.

## Log

see https://confluence.swissqprint.inhouse:8444/x/EICAAQ

# Qt

The binary packages for the Qt Installer Framework include documentation in the
doc directory. The documentation is also available online at
    https://doc.qt.io/qtinstallerframework/index.html

## Notes

To build an installer, it is advised to use a statically linked Qt (5.4 or
newer).

See the documentation at
    https://doc.qt.io/qtinstallerframework/ifw-getting-started.html

## Getting Help

If you think you found a bug, please report it to

https://bugreports.qt.io/browse/QTIFW

General questions are best asked on interest@qt-project.org.

